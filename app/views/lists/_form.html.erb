
<%= form_with(model: @list, local: true, data: { turbo: false }) do |form| %>

  <%= form.text_field :name, placeholder: "Nom de la liste", id: "list-name" %>

  <h2 style="margin-top:32px" class="title">Designers</h2>
  <div class="search-container">
    <svg class="search-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M5.38281 0.530273C6.58078 0.291983 7.82269 0.414466 8.95117 0.881836C10.0797 1.34928 11.045 2.14062 11.7236 3.15625C12.4023 4.17191 12.7637 5.36637 12.7637 6.58789V6.58887C12.7653 7.95942 12.3062 9.29104 11.46 10.3691L11.2344 10.6562L11.4932 10.915L14.293 13.7061L14.2939 13.707C14.3325 13.7452 14.3629 13.7908 14.3838 13.8408C14.4046 13.8909 14.416 13.9448 14.416 13.999C14.416 14.0534 14.4047 14.108 14.3838 14.1582C14.3733 14.1832 14.3608 14.2071 14.3457 14.2295L14.2939 14.292L14.292 14.2939C14.2539 14.3324 14.2082 14.3629 14.1582 14.3838C14.108 14.4047 14.0534 14.416 13.999 14.416C13.9448 14.416 13.8909 14.4046 13.8408 14.3838C13.8158 14.3734 13.7919 14.3608 13.7695 14.3457L13.707 14.2939L13.7061 14.293L10.915 11.4932L10.6562 11.2344L10.3691 11.46C9.35826 12.2534 8.12445 12.7067 6.84473 12.7588L6.58887 12.7637H6.58789C5.36637 12.7637 4.17191 12.4023 3.15625 11.7236C2.14062 11.045 1.34928 10.0797 0.881836 8.95117C0.414466 7.82269 0.291983 6.58078 0.530273 5.38281C0.768606 4.18482 1.35699 3.08442 2.2207 2.2207C3.08442 1.35699 4.18482 0.768606 5.38281 0.530273ZM7.63184 1.33789C6.5938 1.13149 5.51787 1.23765 4.54004 1.64258C3.56199 2.0477 2.72585 2.73405 2.1377 3.61426C1.54954 4.49449 1.23536 5.52924 1.23535 6.58789L1.24219 6.85352C1.30786 8.17642 1.86172 9.43201 2.80273 10.373C3.74376 11.3141 4.99938 11.8679 6.32227 11.9336L6.58789 11.9404C7.64655 11.9404 8.68128 11.6262 9.56152 11.0381C10.4416 10.45 11.1281 9.61463 11.5332 8.63672C11.9383 7.65873 12.0444 6.58218 11.8379 5.54395C11.6314 4.50562 11.1216 3.55132 10.373 2.80273C9.62447 2.05417 8.67014 1.54442 7.63184 1.33789Z" fill="#202020" stroke="#202020" stroke-width="0.823492"/>
      </svg>
    <input type="search" id="designer-search" placeholder="Rechercher des designers" />
  </div>
  <div id="designers-list">
    <div id="designers-load-more"  class="flex-card" style="margin-top:32px">
      <% if @designers.present? %>
        <%= render partial: 'designers_list', collection: @designers, as: :designer %>
      <% else %>
        <p>Aucun designer disponible.</p>
      <% end %>
    </div>
  </div>
  <button id="load-more-designers" class="button dark" data-type="designers" <%= "data-slug='#{@list.slug}'" if @list&.persisted? %>>Charger plus de designers</button>
  <h2 style="margin-top:32px" class="title">Références</h2>
  <div class="search-container" style="margin-top: 64px;">
    <svg class="search-icon" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M5.38281 0.530273C6.58078 0.291983 7.82269 0.414466 8.95117 0.881836C10.0797 1.34928 11.045 2.14062 11.7236 3.15625C12.4023 4.17191 12.7637 5.36637 12.7637 6.58789V6.58887C12.7653 7.95942 12.3062 9.29104 11.46 10.3691L11.2344 10.6562L11.4932 10.915L14.293 13.7061L14.2939 13.707C14.3325 13.7452 14.3629 13.7908 14.3838 13.8408C14.4046 13.8909 14.416 13.9448 14.416 13.999C14.416 14.0534 14.4047 14.108 14.3838 14.1582C14.3733 14.1832 14.3608 14.2071 14.3457 14.2295L14.2939 14.292L14.292 14.2939C14.2539 14.3324 14.2082 14.3629 14.1582 14.3838C14.108 14.4047 14.0534 14.416 13.999 14.416C13.9448 14.416 13.8909 14.4046 13.8408 14.3838C13.8158 14.3734 13.7919 14.3608 13.7695 14.3457L13.707 14.2939L13.7061 14.293L10.915 11.4932L10.6562 11.2344L10.3691 11.46C9.35826 12.2534 8.12445 12.7067 6.84473 12.7588L6.58887 12.7637H6.58789C5.36637 12.7637 4.17191 12.4023 3.15625 11.7236C2.14062 11.045 1.34928 10.0797 0.881836 8.95117C0.414466 7.82269 0.291983 6.58078 0.530273 5.38281C0.768606 4.18482 1.35699 3.08442 2.2207 2.2207C3.08442 1.35699 4.18482 0.768606 5.38281 0.530273ZM7.63184 1.33789C6.5938 1.13149 5.51787 1.23765 4.54004 1.64258C3.56199 2.0477 2.72585 2.73405 2.1377 3.61426C1.54954 4.49449 1.23536 5.52924 1.23535 6.58789L1.24219 6.85352C1.30786 8.17642 1.86172 9.43201 2.80273 10.373C3.74376 11.3141 4.99938 11.8679 6.32227 11.9336L6.58789 11.9404C7.64655 11.9404 8.68128 11.6262 9.56152 11.0381C10.4416 10.45 11.1281 9.61463 11.5332 8.63672C11.9383 7.65873 12.0444 6.58218 11.8379 5.54395C11.6314 4.50562 11.1216 3.55132 10.373 2.80273C9.62447 2.05417 8.67014 1.54442 7.63184 1.33789Z" fill="#202020" stroke="#202020" stroke-width="0.823492"/>
    </svg>
    <input type="search" id="oeuvre-search" placeholder="Rechercher des références" />
  </div>
  <div id="oeuvres-list">
    <div id="oeuvres-load-more" class="flex-card" style="margin-top:32px">
      <% if @oeuvres.present? %>
        <%= render partial: 'oeuvres_list', collection: @oeuvres, as: :oeuvre %>
      <% else %>
        <p>Aucune référence disponible.</p>
      <% end %>
    </div>
  </div>
  <div style="text-align:center; margin-top:20px;">
    <button id="load-more-oeuvres" data-type="oeuvres" class="button dark" <%= "data-slug='#{@list.slug}'" if @list&.persisted? %>>Charger plus de références</button>
  </div>
  <div class="form-footer">
    <div>
      <p id="designer-count">0 designers sélectionnés</p>
      <p id="oeuvre-count">0 références sélectionnées</p>
    </div>
    <%= hidden_field_tag :designer_ids, nil, id: 'designer_ids_field' %>
    <%= hidden_field_tag :oeuvre_ids, nil, id: 'oeuvre_ids_field' %>

    <%= form.submit "Créer la liste", class: "button large dark", id: "submit-list", disabled: true %>

  </div>
<% end %>


<script>
  document.addEventListener("DOMContentLoaded", () => {
    let offsets = { oeuvres: 10, designers: 10 };

    function setupLoadMore(buttonId, listId) {
      const button = document.getElementById(buttonId);
      if (button) {
        button.addEventListener("click", function(e) {
          e.preventDefault();
          const type = this.dataset.type;
          const slug = this.dataset.slug;
          const offset = offsets[type];
          let url = `/lists/load_more_${type}?offset=${offset}`;

          if (slug) {
            url += `&slug=${slug}`;
          }

          fetch(url, {
            headers: {
              'Accept': 'text/html'
            }
          })
          .then(response => response.text())
          .then(html => {
            if (html.trim() !== "") {
              document.getElementById(`${type}-list`).insertAdjacentHTML("beforeend", html);
              offsets[type] += 10;
            } else {
              this.disabled = true;
              this.innerText = "Plus de résultats";
            }
          })
          .catch(error => console.error(`Erreur lors du chargement des ${type}:`, error));
        });
      }
    }

    setupLoadMore("load-more-oeuvres", "oeuvres-load-more");
    setupLoadMore("load-more-designers", "designers-load-more");
  });
</script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const selectedDesigners = new Set();
    const selectedOeuvres = new Set();

    function updateHiddenFields() {
      document.getElementById('designer_ids_field').value = Array.from(selectedDesigners).join(',');
      document.getElementById('oeuvre_ids_field').value = Array.from(selectedOeuvres).join(',');
    }

    function updateCounters() {
      document.getElementById('designer-count').innerText = `${selectedDesigners.size} designers sélectionnés`;
      document.getElementById('oeuvre-count').innerText = `${selectedOeuvres.size} références sélectionnées`;
    }

    function setupSelectableCards(containerId, type) {
      const container = document.getElementById(containerId);
      if (container) {
        container.addEventListener('click', function(event) {
          const card = event.target.closest('.check-box-wrapper');
          if (card && container.contains(card)) {
            const itemId = card.dataset.id;
            if (!itemId) return;

            if (type === 'designer') {
              if (selectedDesigners.has(itemId)) {
                selectedDesigners.delete(itemId);
                card.classList.remove('selected');
              } else {
                selectedDesigners.add(itemId);
                card.classList.add('selected');
              }
            } else if (type === 'oeuvre') {
              if (selectedOeuvres.has(itemId)) {
                selectedOeuvres.delete(itemId);
                card.classList.remove('selected');
              } else {
                selectedOeuvres.add(itemId);
                card.classList.add('selected');
              }
            }

            updateHiddenFields();
            updateCounters();
          }
        });
      }
    }

    function initializeSelections() {
      document.querySelectorAll('#designers-list .check-box-wrapper.selected').forEach(card => {
        const itemId = card.dataset.id;
        if (itemId) {
          selectedDesigners.add(itemId);
        }
      });

      document.querySelectorAll('#oeuvres-list .check-box-wrapper.selected').forEach(card => {
        const itemId = card.dataset.id;
        if (itemId) {
          selectedOeuvres.add(itemId);
        }
      });

      updateHiddenFields();
      updateCounters();
    }

    // Initialisation
    setupSelectableCards('designers-list', 'designer');
    setupSelectableCards('oeuvres-list', 'oeuvre');
    initializeSelections();
  });
</script>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const nameInput = document.getElementById("list-name");
    const submitButton = document.getElementById("submit-list");

    function toggleSubmitButton() {
      submitButton.disabled = nameInput.value.trim() === "";
    }

    nameInput.addEventListener("input", toggleSubmitButton);

    toggleSubmitButton();
  });
</script>

<script>
  function setupLiveSearch(inputId, listContainerId, type) {
    const input = document.getElementById(inputId);
    const listContainer = document.getElementById(listContainerId);
    const loadMoreButton = document.getElementById(`load-more-${type}`);

    input.addEventListener('input', function () {
      const query = this.value.trim();

      if (query.length < 2) {
        // Si champ vide ou trop court, recharge les premiers éléments
        loadInitial(type, listContainer);
        if (loadMoreButton) loadMoreButton.style.display = 'inline-block';
        return;
      }

      fetch(`/lists/search_items?q=${encodeURIComponent(query)}&type=${type}`, {
        headers: { 'Accept': 'text/html' }
      })
      .then(response => response.text())
      .then(html => {
        listContainer.innerHTML = html;
        if (loadMoreButton) loadMoreButton.style.display = 'none'; // Cache le bouton
      })
      .catch(err => console.error(`Erreur recherche ${type}:`, err));
    });
  }

  // Recharge les 10 premiers en cas d'effacement
  function loadInitial(type, container) {
    fetch(`/lists/load_more_${type}?offset=0`, {
      headers: { 'Accept': 'text/html' }
    })
    .then(response => response.text())
    .then(html => container.innerHTML = html);
  }

  document.addEventListener("DOMContentLoaded", function () {
    setupLiveSearch('designer-search', 'designers-load-more', 'designers');
    setupLiveSearch('oeuvre-search', 'oeuvres-load-more', 'oeuvres');
  });
</script>