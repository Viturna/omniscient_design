<%= javascript_include_tag "controllers/uniqueSelect", defer: true %>
<%= javascript_include_tag "controllers/formProgressBar", defer: true %>
<%= form_with(model: @oeuvre, local: true) do |form| %>
  <div class="error-message" style="color: red; display: none;"></div>
  <% if @oeuvre.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(@oeuvre.errors.count, "erreur") %> interdit à cette référence d'être enregistré :</h2>
      <ul>
        <% @oeuvre.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
<div class="form-step" data-step="1">
  <h3>Étape 1 : Nom de l'oeuvre</h3>
  <div class="flex-form"> 
    <div>
      <%= form.text_field :nom_oeuvre, placeholder: "Nom de la référence" %>
    </div>
  </div>
  <div class="flex-btn-add" style="justify-content: flex-end;">
    <button type="button" class="next-step button large">Suivant</button>
  </div>
</div>

<div class="form-step" data-step="2" style="display: none;">
  <h3>Étape 2 : Contexte et Description</h3>
  <div class="flex-form"> 
    <% max_designers = 3 %>
    <% (0...max_designers).each do |index| %>
      <div>
        <%= form.collection_select :designer_ids, Designer.order(:nom_designer), :id, :nom_designer, { include_blank: "Aucun designer", prompt: "Lier un/une designer" }, { class: "form-control designer-select", id: "designer_#{index + 1}", name: "oeuvre[designer_ids][]" } %>
      </div>
    <% end %>
      <div>
      <%= form.collection_select :notion_ids, Notion.order(:name), :id, :name, { include_blank: false }, { class: "form-control concept-select", multiple: true, name: "oeuvre[notion_ids][]" } %>
    </div>
    <div>
      <%= form.select :domaine_id, options_from_collection_for_select(Domaine.all, :id, :domaine) %>
    </div>
  </div>
  <div class="flex-btn-add">
    <button type="button" class="prev-step button large">Précédent</button>
    <button type="button" class="next-step button large">Suivant</button>
  </div>
</div>

<div class="form-step" data-step="3" style="display: none;">
  <h3>Étape 3 : Contexte et Description</h3>
  <div class="flex-form"> 
    <div>
      <%= form.text_area :presentation_generale, placeholder: "Présentation générale (Min. 200 caractères)" %>
    </div>
    <div>
      <%= form.text_area :contexte_historique, placeholder: "Contexte historique (Min. 200 caractères)" %>
    </div>
    <div>
      <%= form.text_area :materiaux_et_innovations_techniques, placeholder: "Matériaux et innovations techniques (Min. 200 caractères)" %>
    </div>
    <div>
      <%= form.text_area :concept_et_inspiration, placeholder: "Concept et inspiration (Min. 200 caractères)" %>
    </div>
    <div>
      <%= form.text_area :dimension_esthetique, placeholder: "Dimension esthétique (Min. 200 caractères)" %>
    </div>
    <div>
      <%= form.text_area :impact_et_message, placeholder: "Impact et message (Min. 200 caractères)" %>
    </div>
  </div>
  <div class="flex-btn-add">
    <button type="button" class="prev-step button large">Précédent</button>
    <button type="button" class="next-step button large">Suivant</button>
  </div>
</div>

<div class="form-step" data-step="4" style="display: none;">
  <h3>Étape 4 : Impact et Image</h3>
  <div class="flex-form"> 
    <div>
      <%= form.text_field :date_oeuvre, placeholder: "Date de la référence", id: "date-oeuvre-input" %>
      <div id="date-oeuvre-error"></div>
    </div>
     <div>
      <%= form.file_field :image, accept: "image/*", direct_upload: true %>
    </div>
  </div>
  <div class="flex-btn-add">
    <button type="button" class="prev-step button large">Précédent</button>
    <%= form.submit "Envoyer", class: "button large" %>
  </div>
</div>

<% end %>
<script>
  $(document).ready(function() {
    var oeuvreYearInput = document.getElementById("date-oeuvre-input");
    var oeuvreYearError = document.getElementById("date-oeuvre-error");

    var currentYear = new Date().getFullYear();

    function validateYear(year, minYear, maxYear) {
      return !isNaN(year) && year >= minYear && year <= maxYear;
    }

    oeuvreYearInput.addEventListener("input", function() {
      var oeuvreYear = oeuvreYearInput.value;

      if (!validateYear(oeuvreYear, 0, currentYear)) {
        oeuvreYearError.textContent = "Veuillez entrer une année de naissance valide entre 0 et " + currentYear;
      } else {
        oeuvreYearError.textContent = "";
      }
    });

    var form = document.querySelector("form");
    form.addEventListener("submit", function(event) {
      var oeuvreYear = oeuvreYearInput.value;
      var errors = [];

      if (!validateYear(oeuvreYear, 0, currentYear)) {
        oeuvreYearError.textContent = "Veuillez entrer une année de naissance valide entre 0 et " + currentYear;
        errors.push("oeuvreYearError");
      }

      if (errors.length > 0) {
        event.preventDefault();
      }
    });
  });
</script>
<script>
  $(document).ready(function() {
    // Configuration pour les designers
    $('.designer-select').select2({
      placeholder: "Rechercher un/une designer...",
      allowClear: true,
      language: {
        inputTooShort: function() {
          return "Veuillez entrer plus de caractères...";
        },
        searching: function() {
          return "Recherche en cours...";
        },
        noResults: function() {
          return "Aucun résultat trouvé";
        }
      }
    });

    // Configuration pour les concepts
    $('.concept-select').select2({
      placeholder: "Rechercher des concepts...",
      allowClear: true,
      language: {
        inputTooShort: function() {
          return "Veuillez entrer plus de caractères...";
        },
        searching: function() {
          return "Recherche en cours...";
        },
        noResults: function() {
          return "Aucun résultat trouvé";
        }
      }
    });
  });
</script>


<script>
  document.addEventListener("DOMContentLoaded", function() {
  const input = document.querySelector('input[type="file"]');
  const preview = document.createElement("img");
  preview.style.maxWidth = "300px";
  preview.style.display = "none";

  input.parentNode.appendChild(preview);

  input.addEventListener("change", function(event) {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = function(e) {
        preview.src = e.target.result;
        preview.style.display = "block";
      };
      reader.readAsDataURL(file);
    }
  });
});

</script>