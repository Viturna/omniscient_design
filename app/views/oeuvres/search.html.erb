<!-- app/views/oeuvres/search.html.erb -->
<style>
  .header-search {
    position: fixed;
    z-index: 99;
    background-color: #F7F7F7;
    height: 100px;
    width: calc(100vw - 350px);
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .search-button{
    padding: 20px 45px;
    border: none;
    border-radius: 50px;
    font-weight: 500;
    cursor: pointer;
  }

  .title {
    margin-top: 48px;
    color: #202020;
    font-size: 24px;
    letter-spacing: -1%;
    font-weight: 500;
  }

  .flex-category, .flex-designer {
    display: flex;
    flex-wrap: wrap;
    gap: 32px;
    margin-top: 32px;
  }
  .flex-category  {
    gap: 64px;
  }

  .flex-oeuvre {
    display: flex;
    flex-wrap: wrap;
    gap: 32px; /* Cet espacement sera entre les cartes uniquement */
    margin-top: 32px;
    margin-bottom: 0; /* Assurez-vous qu'il n'y a pas de marge en bas du flex */
    padding-bottom: 0; /* Si padding est utilisé, retirez-le également */
  }

  /* Si nécessaire, ajustez les marges individuelles des cartes pour éviter les problèmes */
  .card-oeuvre {
    margin-bottom: 0; /* Assurez-vous que les cartes n'ajoutent pas de marge en bas */
  }

  #load-more-button-oeuvres {
    margin-top: 32px; /* Cet espacement est géré indépendamment du flexbox */
    display: flex;
    justify-content: flex-start; /* Ajuste la position du bouton */
  }

  .card-category {
    flex-direction:column;
    gap: 18px;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 18vw;
    height: 180px;
    border-radius: 10px;
    background-color: rgba(255, 255, 255, 0.3); /* Opacity set to 30% */
  }
  .card-category:hover{
    opacity: 0.8;
  }
  .card-designer, .card-oeuvre {
    background-repeat: no-repeat;
    width: 160px;
    height: 280px;
    border-radius: 10px;
    display: flex;
    align-items: end;
    position: relative;
    color:#FFF;
    padding: 20px;
  }
  .card-designer:hover, .card-oeuvre:hover{
    opacity: 0.8;
  }
  .title-card-designer,   .title-card-oeuvre{
    font-size:24px;
    font-weight: 500;
    text-transform: uppercase;
    margin-top: 8px;
  }
  .card-designer .country-card-designer, .domaine-card-oeuvre{
    font-size:14px;
    font-weight: 300;
    text-transform: uppercase;
  }
  .card-designer::after,  .card-oeuvre::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
    border-radius: 10px;
  }
  .inner-card-designer,   .inner-card-oeuvre {
    position: relative;
    z-index: 1;
  }

  .card-category::before {
    opacity: 0.3;
  }

  .main-search {
    padding: 100px 5vw 0 5vw;
  }

  .text-category {
    text-transform: uppercase;
    font-size: 20px;
    font-weight: 500;
  }
  .result{
    top:56px;
    left:0;
    position: absolute;
    border: 2px solid #E9E9E9;
    z-index: 99;
  }
  .result li{
    width: calc(540px - 50px);
    padding: 25px;
    background-color: #fff;
    cursor: pointer;
  }
  .result li:hover{
    background-color: #F7F7F7;
  }
  .result li a{
    color: #202020;
  }


  /* Frise */
  .timeline {
   display: flex;
   align-items: end;
   justify-content: space-between;
   padding: 20px;
   overflow-x: auto;
   white-space: nowrap;
   position: relative;
   gap: 54px;
   height: 140px;
  margin: 48px 0
  }

  .timeline-item {
   display: inline-block;
   text-align: center;
   position: relative;
   width: 50px;
  }

  .timeline-hr {
  position: absolute;
  bottom: 40px; /* Place the line at the bottom */
  left: 0; /* Start from the left edge */
  height: 4px;
  background: #202020;
  z-index: -1;
  border:none;
  width: 100%; /* Ensure the line spans the entire width */
  }

  .year{
    color: #202020;
  }

  .oeuvres {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
  }

  .oeuvres-container {
    max-height: 100px; /* Limiter la hauteur pour éviter les superpositions */
    overflow-y: auto; /* Ajouter un défilement vertical */
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
  }
  .oeuvres-container::-webkit-scrollbar {
    display: none; /* Masquer la barre de défilement dans Chrome, Safari et Opera */
  }
  .hidden-oeuvres {
    display: none;
    flex-direction: column;
  }

  .oeuvres-counter .hidden-oeuvres.visible {
    display: flex;
    align-items:start;
    gap: 8px;
  }


     .oeuvre {
       width: 35px;
       height: 35px;
       background-color: #202020;
       border-radius: 50%;
       cursor: pointer;
       background-size:cover;
     }
     .oeuvre:hover,.circle-with-number:hover{
       opacity: 0.8;
     }
     .oeuvre.empty {
       width: 15px;
       height: 15px;
       background-color: #202020;
       border-radius: 50%;
     }
     .oeuvre.empty:hover{
      cursor: auto;
      opacity: 1;
     }
    .oeuvre-frise{
     margin-top: 32px;
     }
  @media screen and (min-width:0px) and (max-width:349px){
    .header-search {
      width: 100vw;
      justify-content: space-around;
    }
    .title {
      margin-top: 32px;
      font-size: 20px;
    }

    .flex-category, .flex-designer, .flex-oeuvre {
      justify-content: space-between;
      gap: 24px;
      margin-top: 32px;
    }

    .card-category {
      width: 70vw;
      height: 140px;
      font-size: 16px;
      padding: 20px;
      text-align:center;
    }
    .card-designer, .card-oeuvre {
       width: 70vw;
      height: 220px;
      padding: 20px;
    }
    .title-card-designer,   .title-card-oeuvre{
      font-size:22px;
      margin-top: 8px;
    }
    .card-designer .country-card-designer, .domaine-card-oeuvre{
      font-size:14px;
    }

    .text-category {
      font-size: 16px;
    }
    .result{
      top:53px;
    }
    .result li{
      width: calc(70vw - 50px);
      padding: 20px;
    }
  }
  @media screen and (min-width:350px) and (max-width:800px){
    .header-search {
      width: 100vw;
      justify-content: space-around;
    }
    .title {
      margin-top: 32px;
      font-size: 22px;
    }

    .flex-category, .flex-designer, .flex-oeuvre {
      justify-content: space-between;
      gap: 24px;
      margin-top: 32px;
    }

    .card-category {
      width: calc(34vw - 15px);
      height: 140px;
      font-size: 16px;
      padding: 20px;
      text-align:center;
    }
    .card-designer, .card-oeuvre {
      width: calc(34vw - 15px);
      height: 220px;
      padding: 20px;
    }
    .title-card-designer,   .title-card-oeuvre{
      font-size:24px;
      margin-top: 8px;
    }
    .card-designer .country-card-designer, .domaine-card-oeuvre{
      font-size:14px;
    }

    .text-category {
      font-size: 18px;
    }
    .result{
      top:53px;
    }
    .result li{
      width: calc(70vw - 50px);
      padding: 20px;
    }
  }
  @media screen and (min-width:801px) and (max-width:1050px){
    .header-search {
      width: calc(100vw - 260px);
      justify-content: space-around;
    }
    .title {
      margin-top: 24px;
      font-size: 22px;
    }

    .flex-category, .flex-designer, .flex-oeuvre {
      justify-content: space-between;
      gap: 24px;
      margin-top: 32px;
    }

    .card-category {
      width: calc(24vw - 15px);
      height: 140px;
      font-size: 16px;
      padding: 20px;
      text-align:center;
    }
    .card-designer, .card-oeuvre {
      width: calc(24vw - 15px);
      height: 220px;
      padding: 20px;
    }
    .title-card-designer,   .title-card-oeuvre{
      font-size:24px;
      padding-right: 8px;
      margin-top: 8px;
    }
    .card-designer .country-card-designer, .domaine-card-oeuvre{
      font-size:16px;
    }

    .text-category {
      font-size: 18px;
    }
    .result{
      top:53px;
    }
    .result li{
      width: calc(70vw - 50px);
      padding: 20px;
    }
  }
</style>
<div class="main-div">
  <div class="header-search">
    <form autocomplete="off" method="get" action="/oeuvres">
      <div class="autocomplete">
        <input id="workSearch" name="query" class="search-top-bar" type="search" placeholder="Rechercher une œuvre" style="background-image: url('data:image/svg+xml...'); background-repeat: no-repeat; background-position-x: 20px; background-position-y: center;">
        <button type="submit">Rechercher</button>
      </div>
    </form>
    <%= link_to notifications_path, class: "nav-link-profil" do %>
      <div class="circle-notif">
        <svg width="25" height="29" viewBox="0 0 25 29" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M24.8571 23.4762V24.8571H0V23.4762L2.7619 20.7143V12.4286C2.7619 8.14762 5.56524 4.37762 9.66667 3.16238V2.7619C9.66667 2.0294 9.95765 1.3269 10.4756 0.808943C10.9936 0.290985 11.6961 0 12.4286 0C13.1611 0 13.8636 0.290985 14.3815 0.808943C14.8995 1.3269 15.1905 2.0294 15.1905 2.7619V3.16238C19.2919 4.37762 22.0952 8.14762 22.0952 12.4286V20.7143L24.8571 23.4762ZM15.1905 26.2381C15.1905 26.9706 14.8995 27.6731 14.3815 28.1911C13.8636 28.709 13.1611 29 12.4286 29C11.6961 29 10.9936 28.709 10.4756 28.1911C9.95765 27.6731 9.66667 26.9706 9.66667 26.2381" fill="white"/>
        </svg>
        <% if current_user %>
          <% if @unread_notifications_count > 0 %>
            <div class="notification-counter">
              <div class="notification-badge"><%= @unread_notifications_count %></div>
            </div>
          <% end %>
        <% end %>
      </div>
    <% end %>
  </div>
  <div class="main-search">
    <h1>Rechercher</h1>
    <h2 class="title">Catégories</h2>
    <div class="flex-category">
      <% Domaine.all.each do |domaine| %>
        <%= link_to search_category_path(domaine: domaine.id) do %>
          <div class="card-category" style="background-color: <%= domaine.couleur %>80;">
            <%= image_tag "domaines/#{domaine.svg}", alt: domaine.domaine %>
            <p class="text-category" style="color:<%= domaine.couleur %>;"><%= domaine.domaine %></p>
          </div>
        <% end %>
      <% end %>
    </div>
    <h2 class="title">Frise Chronologique</h2>
    <a href="/search_frise">
      <div class="timeline">
        <% @timeline_years.each do |year| %>
          <div class="timeline-item">
            <div class="oeuvres">
              <div class="oeuvres-container">
                <% oeuvres_year = @oeuvres_filtered.select { |oeuvre| oeuvre.date_oeuvre.to_i == year } %>
                <% oeuvres_year.each do |oeuvre| %>
                  <div class="oeuvre" title="<%= oeuvre.nom_oeuvre %>" data-year="<%= oeuvre.date_oeuvre %>" style="background-image: url('<%= oeuvre.image %>');"></div>
                <% end %>
                <% designers_year = @designers_filtered.select { |designer| designer.date_naissance.to_i == year } %>
                <% designers_year.each do |designer| %>
                  <div class="oeuvre" title="<%= designer.nom_designer %>" data-year="<%= designer.date_naissance %>" style="background-image: url('<%= designer.image %>');"></div>
                <% end %>
              </div>
              <div class="oeuvre empty"></div>
              <div class="year"><%= year %></div>
            </div>
          </div>
        <% end %>
        <hr class="timeline-hr">
      </div>
      <button class="button dark">Voir les frises chronologiques</button>
    </a>
    <h2 class="title">Designers</h2>
    <div class="flex-designer" id="designer-cards">
      <% @designers = Designer.where(validation: true).order(:nom_designer) %>
      <% @designers.each do |designer| %>
        <%= link_to designer do %>
          <div class="card-designer" style="background: url('<%= designer.image %>'); background-size: cover; background-position:center;">
            <div class="inner-card-designer">
              <p class="country-card-designer"><%= designer.country.country %></p>
              <p class="title-card-designer"><%= designer.nom_designer %></p>
            </div>
          </div>
        <%end%>
      <% end %>
    </div>
    <div id="load-more-button-designers">
      <button class="load-more-btn button dark" >Charger plus de designers</button>
    </div>
    <h2 class="title">Oeuvres</h2>
    <div class="container-oeuvres">
      <div class="flex-oeuvre" id="oeuvre-cards">
        <% @oeuvres.each do |oeuvre| %>
          <%= link_to oeuvre do %>
            <div class="card-oeuvre" style="background: url('<%= oeuvre.image %>'); background-size: cover; background-position:center;">
              <div class="inner-card-oeuvre">
                <p class="domaine-card-oeuvre"><%= oeuvre.domaine.domaine %></p>
                <p class="title-card-oeuvre"><%= oeuvre.nom_oeuvre %></p>
              </div>
            </div>
          <% end %>
        <% end %>
      </div>

      <!-- Bouton en dehors de la flexbox -->
      <div id="load-more-button-oeuvres">
        <button class="load-more-btn button dark">Charger plus d'oeuvres</button>
      </div>
    </div>

    <script>
      document.addEventListener("turbo:load", function() {
        const designerCards = document.querySelectorAll('.card-designer');
        const oeuvreCards = document.querySelectorAll('.card-oeuvre');
        const loadMoreButtonDesigners = document.getElementById('load-more-button-designers');
        const loadMoreButtonOeuvres = document.getElementById('load-more-button-oeuvres');
        const initialCardsToShow = 8;
        let cardsToShowDesigners = initialCardsToShow;
        let cardsToShowOeuvres = initialCardsToShow;

        // Fonction pour afficher les cartes des designers
        function showMoreDesigners() {
          for (let i = cardsToShowDesigners; i < cardsToShowDesigners + initialCardsToShow; i++) {
            if (i >= designerCards.length) {
              loadMoreButtonDesigners.disabled = true;
              loadMoreButtonDesigners.textContent = "";
              break;
            }
            designerCards[i].style.display = 'flex';
          }
          cardsToShowDesigners += initialCardsToShow;
        }

        // Fonction pour afficher les cartes des oeuvres
        function showMoreOeuvres() {
          for (let i = cardsToShowOeuvres; i < cardsToShowOeuvres + initialCardsToShow; i++) {
            if (i >= oeuvreCards.length) {
              loadMoreButtonOeuvres.disabled = true;
              loadMoreButtonOeuvres.textContent = "";
              break;
            }
            oeuvreCards[i].style.display = 'flex';
          }
          cardsToShowOeuvres += initialCardsToShow;
        }

        // Cacher toutes les cartes des designers au-delà de celles à afficher initialement
        for (let i = initialCardsToShow; i < designerCards.length; i++) {
          designerCards[i].style.display = 'none';
        }

        // Cacher toutes les cartes des oeuvres au-delà de celles à afficher initialement
        for (let i = initialCardsToShow; i < oeuvreCards.length; i++) {
          oeuvreCards[i].style.display = 'none';
        }

        // Gérer le clic sur le bouton "Charger plus" pour les designers
        loadMoreButtonDesigners.addEventListener('click', function() {
          showMoreDesigners();
        });

        // Gérer le clic sur le bouton "Charger plus" pour les oeuvres
        loadMoreButtonOeuvres.addEventListener('click', function() {
          showMoreOeuvres();
        });
      });
    </script>
  </div>
</div>
<script>
  function autocomplete(inp, arr) {
  var currentFocus;
  inp.addEventListener("input", function(e) {
      var a, b, i, val = this.value;
      closeAllLists();
      if (!val) { return false; }
      currentFocus = -1;
      a = document.createElement("DIV");
      a.setAttribute("id", this.id + "autocomplete-list");
      a.setAttribute("class", "autocomplete-items");
      this.parentNode.appendChild(a);
      for (i = 0; i < arr.length; i++) {
        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
          b = document.createElement("DIV");
          b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
          b.innerHTML += arr[i].substr(val.length);
          b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
          b.addEventListener("click", function(e) {
              inp.value = this.getElementsByTagName("input")[0].value;
              closeAllLists();
          });
          a.appendChild(b);
        }
      }
  });

  inp.addEventListener("keydown", function(e) {
      var x = document.getElementById(this.id + "autocomplete-list");
      if (x) x = x.getElementsByTagName("div");
      if (e.keyCode == 40) {
        currentFocus++;
        addActive(x);
      } else if (e.keyCode == 38) {
        currentFocus--;
        addActive(x);
      } else if (e.keyCode == 13) {
        e.preventDefault();
        if (currentFocus > -1) {
          if (x) x[currentFocus].click();
        }
      }
  });

  function addActive(x) {
    if (!x) return false;
    removeActive(x);
    if (currentFocus >= x.length) currentFocus = 0;
    if (currentFocus < 0) currentFocus = (x.length - 1);
    x[currentFocus].classList.add("autocomplete-active");
  }

  function removeActive(x) {
    for (var i = 0; i < x.length; i++) {
      x[i].classList.remove("autocomplete-active");
    }
  }

  function closeAllLists(elmnt) {
    var x = document.getElementsByClassName("autocomplete-items");
    for (var i = 0; i < x.length; i++) {
      if (elmnt != x[i] && elmnt != inp) {
        x[i].parentNode.removeChild(x[i]);
      }
    }
  }

  document.addEventListener("click", function (e) {
      closeAllLists(e.target);
  });
}

document.addEventListener("turbo:load", function() {
  // Remplacez cette liste par vos noms d'œuvres extraits du backend
  var works = ["Œuvre 1", "Œuvre 2", "Œuvre 3", "Œuvre 4"];

  // Initialisez l'autocomplétion avec les données des œuvres
  autocomplete(document.getElementById("workSearch"), works);
});

</script>
<script>
  document.addEventListener("turbo:load", function() {
    var works = <%= raw @works.to_json %>; // Injecter les œuvres dans le JavaScript
    autocomplete(document.getElementById("workSearch"), works);
  });
</script>
